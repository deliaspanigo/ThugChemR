output[[1]]
the_cols <- c("Element", "Reactive", "Product")
the_rows <- c(chem_symbol, "O")
balance_modelo <- matrix(NA, length(the_cols), length(the_rows))
colnames(balance_modelo) <- the_cols
the_cols <- c("Element", "Reactive", "Product")
the_rows <- c(chem_symbol, "O")
balance_modelo <- matrix(NA, length(the_cols), length(the_rows))
the_cols <- c("Element", "Reactive", "Product")
the_rows <- c(chem_symbol, "O")
balance_modelo <- matrix(NA, length(the_cols), length(the_rows))
colnames(balance_modelo) <- the_cols
the_cols <- c("Element", "Reactive", "Product")
the_rows <- c(chem_symbol, "O")
balance_modelo <- matrix(NA, length(the_rows), length(the_cols))
colnames(balance_modelo) <- the_cols
rownames(balance_modelo) <- the_rows
balance_modelo
materia_prima <- output[[1]]
materia_prima
the_cols <- c("Element", "Reactive", "Product")
the_rows <- c(chem_symbol, "O")
balance_modelo <- matrix(NA, length(the_rows), length(the_cols))
colnames(balance_modelo) <- the_cols
# rownames(balance_modelo) <- the_rows
balance_modelo[,1] <- the_rows
balance_modelo
balance_modelo <- matrix(NA, length(the_rows), length(the_cols))
colnames(balance_modelo) <- the_cols
rownames(balance_modelo) <- 1:length(the_rows)
balance_modelo[,1] <- the_rows
balance_suma <- sapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3, "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
})
x
x <- 1
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3, "*", materia_prima$subEP[x])
the_output
paste0(materia_prima$coef3, "*", materia_prima$subEP[x])
balance_suma <- sapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
})
balance_suma
balance_modelo <- matrix(NA, length(the_rows), length(the_cols))
colnames(balance_modelo) <- the_cols
rownames(balance_modelo) <- 1:length(the_rows)
balance_modelo[,1] <- the_rows
balance_suma <- sapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
return(the_output)
})
balance_suma
balance_suma <- lapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
return(the_output)
})
balance_suma
the_output <- balance_bruto[[x]]
balance_bruto <- lapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
return(the_output)
})
balance_suma <- lapply(1:length(balance_bruto), function(x){
the_output <- balance_bruto[[x]]
# El elemento
the_output[1,2] <- eval(parse(text = the_output[1,2]))
the_output[1,3] <- eval(parse(text = the_output[1,2]))
# El oxigeno
the_output[2,2] <- eval(parse(text = the_output[1,2]))
the_output[2,3] <- eval(parse(text = the_output[1,2]))
return(the_output)
})
balance_suma
balance_bruto <- lapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
return(the_output)
})
balance_suma <- lapply(1:length(balance_bruto), function(x){
the_output <- balance_bruto[[x]]
# El elemento
the_output[1,2] <- eval(parse(text = the_output[1,2]))
the_output[1,3] <- eval(parse(text = the_output[1,3]))
# El oxigeno
the_output[2,2] <- eval(parse(text = the_output[2,2]))
the_output[2,3] <- eval(parse(text = the_output[2,3]))
return(the_output)
})
balance_suma
x <- 1
elegida_bruto <- balance_bruto[[x]]
elegida_suma <- balance_suma[[x]]
elegida_bruto <- balance_bruto[[x]]
elegida_suma <- balance_suma[[x]]
the_output <- paste0(elegida_bruto, " = ", elegida_suma)
the_output
balance_bruto <- lapply(1:nrow(materia_prima), function(x){
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(materia_prima$coef1[x], "*", materia_prima$subER[x])
the_output[1,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subEP[x])
# El oxigeno
the_output[2,2] <- paste0(materia_prima$coef2[x], "*", materia_prima$subOR[x])
the_output[2,3] <- paste0(materia_prima$coef3[x], "*", materia_prima$subOP[x])
return(the_output)
})
balance_suma <- lapply(1:length(balance_bruto), function(x){
the_output <- balance_bruto[[x]]
# El elemento
the_output[1,2] <- eval(parse(text = the_output[1,2]))
the_output[1,3] <- eval(parse(text = the_output[1,3]))
# El oxigeno
the_output[2,2] <- eval(parse(text = the_output[2,2]))
the_output[2,3] <- eval(parse(text = the_output[2,3]))
return(the_output)
})
balance_rejunte <- lapply(1:length(balance_bruto), function(x){
elegida_bruto <- balance_bruto[[x]]
elegida_suma <- balance_suma[[x]]
the_output <- balance_modelo
# El elemento
the_output[1,2] <- paste0(elegida_bruto[1,2], "= ", elegida_suma[1,2])
the_output[1,3] <- paste0(elegida_bruto[1,3], "= ", elegida_suma[1,3])
# El oxigeno
the_output[2,2] <- paste0(elegida_bruto[2,2], "= ", elegida_suma[2,2])
the_output[2,3] <- paste0(elegida_bruto[2,3], "= ", elegida_suma[2,3])
return(the_output)
})
balance_rejunte
load_all()
Create_PackTC_04_Oxyde()
# Output Details
output_obj_name <-  "PackTC_04_Oxyde"
output_folder <- "./data-raw/Output/"
all_languages <- names(ThugChemR::DataTC_04_Oxyde)
# Unique .RData
# Is a big big list with all about oxyde
output_file <- paste0(output_obj_name,"_",".RData")
output_path <- paste0(output_folder, output_file)
data_output <- sapply(all_languages, function(y){
# # # y <- "eng"
data_input <- DataTC_04_Oxyde[[y]]
pack_output <- list()
max_digits <- floor(log10(nrow(data_input))) + 1
for(x in 1:nrow(data_input)){
chem_symbol <- data_input$Symbol[x]
element_valence <- data_input$SelectedValence[x]
element_valence <- as.numeric(as.character(element_valence))
gas_status_element <- data_input$State_Gas[x]
resolution_complite <- Resolution_Oxyde(chem_symbol = chem_symbol,
element_valence = element_valence,
gas_status_element = gas_status_element,
language = y)
the_atomic_number <- data_input$Order[x]
the_order <- stringr::str_pad(string = the_atomic_number,
width = max_digits,
side = "left",
pad = "0")
chem_formule <-  resolution_complite$ChemFormule
final_name <- paste0("Oxyde_", the_order, "_",
chem_symbol, element_valence, "_",
chem_formule)
pack_output[[final_name]] <- resolution_complite
}
return(pack_output)
}, simplify = F, USE.NAMES = T)
assign(output_obj_name, data_output)
gen_sentence <- "usethis::use_data(_ObjName_, overwrite = TRUE)"
the_sentence <- gsub("_ObjName_", output_obj_name, gen_sentence)
eval(parse(text = the_sentence))
load_all()
Create_PackTC_04_Oxyde()
document()
load_all()
Create_PackTC_04_Oxyde()
document()
load_all()
Create_PackTC_04_Oxyde()
# Output Details
output_obj_name <-  "PackTC_04_Oxyde"
output_folder <- "./data-raw/Output/"
all_languages <- names(ThugChemR::DataTC_04_Oxyde)
all_languages
# Unique .RData
# Is a big big list with all about oxyde
output_file <- paste0(output_obj_name,"_",".RData")
output_path <- paste0(output_folder, output_file)
y <- "eng"
data_input <- DataTC_04_Oxyde[[y]]
pack_output <- list()
max_digits <- floor(log10(nrow(data_input))) + 1
for(x in 1:nrow(data_input)){
chem_symbol <- data_input$Symbol[x]
element_valence <- data_input$SelectedValence[x]
element_valence <- as.numeric(as.character(element_valence))
gas_status_element <- data_input$State_Gas[x]
resolution_complite <- Resolution_Oxyde(chem_symbol = chem_symbol,
element_valence = element_valence,
gas_status_element = gas_status_element,
language = y)
the_atomic_number <- data_input$Order[x]
the_order <- stringr::str_pad(string = the_atomic_number,
width = max_digits,
side = "left",
pad = "0")
chem_formule <-  resolution_complite$ChemFormule
final_name <- paste0("Oxyde_", the_order, "_",
chem_symbol, element_valence, "_",
chem_formule)
pack_output[[final_name]] <- resolution_complite
}
pack_output
load_all()
Create_PackTC_04_Oxyde()
y <- "esp"
# Output Details
output_obj_name <-  "PackTC_04_Oxyde"
output_folder <- "./data-raw/Output/"
all_languages <- names(ThugChemR::DataTC_04_Oxyde)
# Unique .RData
# Is a big big list with all about oxyde
output_file <- paste0(output_obj_name,"_",".RData")
output_path <- paste0(output_folder, output_file)
data_input <- DataTC_04_Oxyde[[y]]
pack_output <- list()
max_digits <- floor(log10(nrow(data_input))) + 1
for(x in 1:nrow(data_input)){
chem_symbol <- data_input$Symbol[x]
element_valence <- data_input$SelectedValence[x]
element_valence <- as.numeric(as.character(element_valence))
gas_status_element <- data_input$State_Gas[x]
resolution_complite <- Resolution_Oxyde(chem_symbol = chem_symbol,
element_valence = element_valence,
gas_status_element = gas_status_element,
language = y)
the_atomic_number <- data_input$Order[x]
the_order <- stringr::str_pad(string = the_atomic_number,
width = max_digits,
side = "left",
pad = "0")
chem_formule <-  resolution_complite$ChemFormule
final_name <- paste0("Oxyde_", the_order, "_",
chem_symbol, element_valence, "_",
chem_formule)
pack_output[[final_name]] <- resolution_complite
}
# # # y <- "ita"
data_input <- DataTC_04_Oxyde[[y]]
pack_output <- list()
max_digits <- floor(log10(nrow(data_input))) + 1
for(x in 1:nrow(data_input)){
chem_symbol <- data_input$Symbol[x]
element_valence <- data_input$SelectedValence[x]
element_valence <- as.numeric(as.character(element_valence))
gas_status_element <- data_input$State_Gas[x]
resolution_complite <- Resolution_Oxyde(chem_symbol = chem_symbol,
element_valence = element_valence,
gas_status_element = gas_status_element,
language = y)
the_atomic_number <- data_input$Order[x]
the_order <- stringr::str_pad(string = the_atomic_number,
width = max_digits,
side = "left",
pad = "0")
chem_formule <-  resolution_complite$ChemFormule
final_name <- paste0("Oxyde_", the_order, "_",
chem_symbol, element_valence, "_",
chem_formule)
pack_output[[final_name]] <- resolution_complite
}
# Output Details
output_obj_name <-  "PackTC_04_Oxyde"
output_folder <- "./data-raw/Output/"
all_languages <- names(ThugChemR::DataTC_04_Oxyde)
# Unique .RData
# Is a big big list with all about oxyde
output_file <- paste0(output_obj_name,"_",".RData")
output_path <- paste0(output_folder, output_file)
data_output <- sapply(all_languages, function(y){
# # # y <- "ita"
data_input <- DataTC_04_Oxyde[[y]]
pack_output <- list()
max_digits <- floor(log10(nrow(data_input))) + 1
for(x in 1:nrow(data_input)){
chem_symbol <- data_input$Symbol[x]
element_valence <- data_input$SelectedValence[x]
element_valence <- as.numeric(as.character(element_valence))
gas_status_element <- data_input$State_Gas[x]
resolution_complite <- Resolution_Oxyde(chem_symbol = chem_symbol,
element_valence = element_valence,
gas_status_element = gas_status_element,
language = y)
the_atomic_number <- data_input$Order[x]
the_order <- stringr::str_pad(string = the_atomic_number,
width = max_digits,
side = "left",
pad = "0")
chem_formule <-  resolution_complite$ChemFormule
final_name <- paste0("Oxyde_", the_order, "_",
chem_symbol, element_valence, "_",
chem_formule)
pack_output[[final_name]] <- resolution_complite
}
return(pack_output)
}, simplify = F, USE.NAMES = T)
assign(output_obj_name, data_output)
gen_sentence <- "usethis::use_data(_ObjName_, overwrite = TRUE)"
the_sentence <- gsub("_ObjName_", output_obj_name, gen_sentence)
eval(parse(text = the_sentence))
document()
Create_PackTC_04_Oxyde()
document()
Create_PackTC_04_Oxyde()
document()
Create_PackTC_04_Oxyde()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
load_all()
ThugChemPage()
PackTC_04_Oxyde[["eng"]]
names( PackTC_04_Oxyde[["eng"]])
PackTC_04_Oxyde[["eng"]][["Oxyde_175_Np3_Np2O3"]][["Balance_Oxyde"]]
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
names(PackTC_04_Oxyde[["eng"]])
ThugChemPage()
load_all()
ThugChemPage()
names(PackTC_04_Oxyde[["eng"]])
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
plot(mtcars, axis = F)
plot(mtcars, axes = F)
plot(mtcars[,c(1,2)])
plot(mtcars[,c(1,2)], xlab = "", axis = F)
plot(mtcars[,c(1,2)], xlab = "", axes = F)
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
library(devtools)
document()
library(devtools)
load_all()
ThugChemPage()
load_all()
ThugChemPage()
load_all()
ThugChemPage()
library(shiny)
ThugChemPage()
library(shiny)
ThugChemPage()
load_all()
ThugChemPage()
